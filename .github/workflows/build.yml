name: Docker Build & Push

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Determine last successful version
        id: determine_version
        run: |
          # Verifica se há tags no repositório
          if git rev-parse --quiet --verify "refs/tags/*" > /dev/null; then
            latest_version=$(git describe --tags $(git rev-list --tags --max-count=1))
          else
            latest_version="v0.0.0"
          fi

          if [ -z "$latest_version" ]; then
            latest_version="v0.0.0"
          fi

          IFS='.' read -r major minor patch <<< "${latest_version#v}"

          latest_commit_message=$(git log -1 --pretty=%B)

          if [[ "$latest_commit_message" == *"BREAKING CHANGE"* ]]; then
            increment="major"
          elif [[ "$latest_commit_message" == *"feature"* ]]; then
            increment="minor"
          else
            increment="patch"
          fi

          case $increment in
            major)
              new_version="v$(($major + 1)).0.0"
              ;;
            minor)
              new_version="v$major.$(($minor + 1)).0"
              ;;
            patch)
              new_version="v$major.$minor.$(($patch + 1))"
              ;;
          esac

          echo "new_version=$new_version" >> $GITHUB_ENV
          echo "new_version=$new_version"

      - name: Create new tag
        if: env.new_version != 'v0.0.0'
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag ${{ env.new_version }}
          git push origin ${{ env.new_version }}

      - name: Validate Dockerfile
        if: env.new_version != 'v0.0.0'
        run: docker build --pull --no-cache -t ${{ github.repository }}:${{ env.new_version }} .

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        if: env.new_version != 'v0.0.0'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ github.repository }}:${{ env.new_version }}
          build-args: |
            version=${{ env.new_version }}
