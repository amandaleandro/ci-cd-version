name: Docker Build & Push

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do cÃ³digo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Validate Dockerfile
        run: |
          if [ -f Dockerfile ]; then
            echo "Dockerfile validation passed."
          else
            echo "Dockerfile not found."
            exit 1
          fi

      - name: Check if package.json exists
        id: check_package_json
        run: |
          if [ -f "package.json" ]; then
            echo "package_json_exist=true" >> $GITHUB_ENV
          else
            echo "package_json_exist=false" >> $GITHUB_ENV
          fi

      - name: Run tests and install dependencies
        if: env.package_json_exist == 'true'
        run: |
          npm install
          npm test || echo "Tests failed, but continuing the pipeline."

      - name: Determine version
        id: determine_version
        run: |
          #!/usr/bin/env bash
          # ... (rest of the script)

      - name: Store last successful version
        if: ${{ steps.determine_version.outputs.new_version != 'v1.0.1' }}
        run: echo ${{ env.new_version }} > last_successful_version.txt

      - name: Commit last successful version
        if: ${{ steps.determine_version.outputs.new_version != 'v1.0.1' }}
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add last_successful_version.txt
          git commit -m "Update last successful version to ${{ env.new_version }}"
          git push origin main

      - name: Save Docker image name
        if: ${{ steps.determine_version.outputs.new_version != 'v1.0.1' }}
        run: echo "${{ secrets.DOCKER_USERNAME }}/ci-cd-version:${{ env.new_version }}" > docker_image_name.txt

      - name: Commit Docker image name
        if: ${{ steps.determine_version.outputs.new_version != 'v1.0.1' }}
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add docker_image_name.txt
          git commit -m "Save Docker image name"
          git push origin main

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/ci-cd-version:${{ env.new_version }}
