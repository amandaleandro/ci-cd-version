name: Docker Build & Push

on:
  push:
    branches:
      - main # ajuste conforme sua branch principal

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do cÃ³digo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Validate Dockerfile
        run: docker build --pull --no-cache -t ${{ github.repository }}:${{ github.ref_name }} -f Dockerfile .

      - name: Check if package.json exists
        id: check_package_json
        run: |
          if [ -f "package.json" ]; then
            echo "package_json_exist=true" >> $GITHUB_ENV
          else
            echo "package_json_exist=false" >> $GITHUB_ENV
          fi

      - name: Run tests and install dependencies
        if: env.package_json_exist == 'true'
        run: |
          npm install
          npm test

      - name: Check if it's the first commit
        id: first_commit
        run: echo "is_first_commit=$(git rev-list --count HEAD)" >> $GITHUB_ENV

      - name: Check if tag exists
        id: tag_exists
        run: echo "tag_exists=$(git describe --exact-match --tags $(git log -n1 --pretty='%h'))" >> $GITHUB_ENV

      - name: Determine version
        id: determine_version
        run: |
          if [ "$is_first_commit" == "1" ] || [ -z "$tag_exists" ]; then
            echo "version=0.0.1" >> $GITHUB_ENV
          else
            echo "version=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV
          fi

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile # caminho para o Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/ci-cd-version:v${{ env.version }}
