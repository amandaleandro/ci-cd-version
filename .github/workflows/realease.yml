name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        run: git clone https://github.com/amandaleandro/ci-cd-version.git

      - name: Set up Node.js
        run: |
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
          nvm install 20.4.0

      - name: Install dependencies with npm install
        run: npm install

      - name: Release
        id: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release

  build-and-push-docker:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        run: git clone https://github.com/amandaleandro/ci-cd-version.git

      - name: Set up Docker Buildx
        run: |
          docker run --privileged --rm tonistiigi/binfmt --install all
          docker buildx create --name mybuilder
          docker buildx use mybuilder
          docker buildx inspect --bootstrap

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Extract version from package.json
        id: get_version
        run: echo "VERSION=$(jq -r .version package.json)" >> $GITHUB_ENV

      - name: Build and push Docker image
        run: |
          docker build -t my-docker-repo/my-app:$VERSION .
          docker push my-docker-repo/my-app:$VERSION
        env:
          VERSION: ${{ env.VERSION }}
